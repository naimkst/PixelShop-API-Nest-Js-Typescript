// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("DATABASE_URL")
}

enum UserType {
  USER
  ADMIN
}

enum Status {
  ACTIVE
  INACTIVE
}

model User {
  id            Int       @id @default(autoincrement())
  fname         String?
  lname         String?
  email         String    @unique
  password      String
  image         String?
  adress        String?
  phone         String?
  role          UserType
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  emailVerified Status
  status        Status
  Order         Order[]
  Product       Product[]
  Comment       Comment[]
}

model Product {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  price       String
  image       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  status      Status
  featured    Status
  Order       Order[]
  userId      Int?
  user        User?     @relation(fields: [userId], references: [id])
  categoryId  Int?
  category    Category? @relation(fields: [categoryId], references: [id])
  Comment     Comment[]
}

model Category {
  id        Int       @id @default(autoincrement())
  title     String?
  image     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  status    Status
  Product   Product[]
}

model Order {
  id        Int      @id @default(autoincrement())
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    Status
}

model Comment {
  id        Int      @id @default(autoincrement())
  comments  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  productId Int
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  status    Status
}

model AdminSetting {
  id            Int      @id @default(autoincrement())
  settingsName  String
  settingsValue String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
